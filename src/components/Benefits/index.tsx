import React from 'react';
import clsx from 'clsx';
import styles from './styles.module.css';

type BenefitItem = {
  title: string;
  Svg: React.ComponentType<React.ComponentProps<'svg'>>;
  description: JSX.Element;
};

const BenefitList: BenefitItem[] = [
  {
    title: 'Cost-Effective',
    Svg: require('@site/static/img/piggy-bank.svg').default,
    description: (
      <>
        Threshold signature wallets work completely off-chain so access-structure/security policy updates are free.
        Additionally, individual transactions are smaller and thus less expensive because they include only one jointly
        computed signature.
      </>
    ),
  },
  {
    title: 'Universal Interoperability',
    Svg: require('@site/static/img/cable.svg').default,
    description: (
      <>
        Threshold signatures are similar to standard signatures generated by traditional wallets. So they work
        everywhere traditional wallet signatures work. No custom integrations and/or additional standards are required.
      </>
    ),
  },
  {
    title: 'Enhanced Privacy and Security',
    Svg: require('@site/static/img/lock.svg').default,
    description: (
      <>
        Threshold signatures don't leak any information about the quorum structure/security policy, the identity, nor
        the number of approving signatories.
      </>
    ),
  },
];

function Benefit({ title, Svg, description }: BenefitItem) {
  return (
    <div className={clsx('col col--4')}>
      <div className="text--center">
        <Svg className={styles.benefitsSvg} role="img" />
      </div>
      <div className="text--center padding-horiz--md">
        <h3>{title}</h3>
        <p>{description}</p>
      </div>
    </div>
  );
}

export default function HomepageBenefits(): JSX.Element {
  return (
    <section className={styles.benefits}>
      <div className="container">
        <div className="row">
          {BenefitList.map((props, idx) => (
            <Benefit key={idx} {...props} />
          ))}
        </div>
      </div>
    </section>
  );
}
